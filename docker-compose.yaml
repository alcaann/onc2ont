# docker-compose.yaml

services:
  db:
    image: postgres:15 # Use a specific PostgreSQL version
    container_name: umls_postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # - ./db_init:/docker-entrypoint-initdb.d # Optional init scripts
    environment:
      POSTGRES_DB: umls_db # Match app env
      POSTGRES_USER: umls_user # Match app env
      POSTGRES_PASSWORD: your_very_secure_password_here # Match app env
    ports:
      # Map internal DB port 5432 to host port 5433 (for external tools if needed)
      - "5433:5432"
    networks:
      - umls_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -q"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: umls_processor_app
    environment:
      # LOG_LEVEL: DEBUG
      POSTGRES_DB: umls_db
      POSTGRES_USER: umls_user
      POSTGRES_PASSWORD: your_very_secure_password_here
      DB_HOST: db
      DB_PORT: 5432 # App connects to DB internally on 5432
      # PYTHONUNBUFFERED: 1 # Set in Dockerfile
    volumes:
      - ./data/source/umls/META:/app/data/source/umls/META:ro
      - .:/app:rw # Mount local code for development
    networks:
      - umls_net
    depends_on:
      db:
        condition: service_healthy
    # --- ADD THIS SECTION ---
    ports:
      # Map host port 5000 to container port 5000 (for displacy.serve)
      - "5000:5000"
    # ------------------------
    stdin_open: true
    tty: true

networks:
  umls_net:
    driver: bridge

volumes:
  postgres_data: